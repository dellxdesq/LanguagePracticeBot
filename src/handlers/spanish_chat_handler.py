import asyncio
from aiogram import Router
from aiogram import types, F
from aiogram.fsm.context import FSMContext
from service.spanish_ai_service import SpanishOllamaAI
from handlers.cancel_handler import cancel_command
from settings.states import ChatStates

router = Router()
spanish_ollama_ai = SpanishOllamaAI()

@router.message(F.text, ChatStates.SPANISH_CHAT)
async def spanish_chat_with_ai(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å–ø–∞–Ω—Å–∫–æ–º —á–∞—Ç–µ"""
    current_state = await state.get_state()
    print(f"–¢–µ–∫—É—â–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {current_state}")
    user_message = message.text
    print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_message}")

    if user_message == "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥":
        await cancel_command(message, state)
        return
    try:
        await message.answer("–ü–µ—á–∞—Ç–∞–µ—Ç...‚úçüèª")
        ai_response = spanish_ollama_ai.get_response(user_message)
        await message.answer(ai_response)
    except Exception as e:
        await message.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
